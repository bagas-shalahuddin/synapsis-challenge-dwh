services:
  clickhouse:
    image: clickhouse/clickhouse-server:22-alpine
    container_name: clickhouse
    hostname: clickhouse
    environment:
      - CLICKHOUSE_DB=coal_mining
      - CLICKHOUSE_USER=username
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks: 
      - metanet1-clickhouse
    ports:
      - "8123:8123"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8123/?user=username&password=password&query=SELECT%201 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # PostgreSQL for Metabase metadata
  postgres-app-db:
    image: postgres:15.2-alpine
    container_name: postgres-app-db
    hostname: postgres-app-db
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-metabase}"
      - "POSTGRES_DB=${POSTGRES_DB:-metabase}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mysecretpassword}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
      - metanet1-clickhouse
    cpus: 1
    mem_limit: 128m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-metabase} -d ${POSTGRES_DB:-metabase}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Metabase Dashboard
  metabase:
    image: metabase/metabase:v0.55.9
    container_name: metabase
    hostname: metabase
    volumes: 
      - ./metabase-dockerfile/plugins:/plugins
    ports:
      - "${METABASE_PORT:-3000}:3000"
    environment: 
      - "MB_DB_TYPE=postgres"
      - "MB_DB_DBNAME=${POSTGRES_DB:-metabase}"
      - "MB_DB_PORT=5432"
      - "MB_DB_USER=${POSTGRES_USER:-metabase}"
      - "MB_DB_PASS=${POSTGRES_PASSWORD:-mysecretpassword}"
      - "MB_DB_HOST=postgres-app-db"
      - "MB_ENABLE_XRAYS=false"
      - "MB_SEND_EMAIL_ON_FIRST_LOGIN_FROM_NEW_DEVICE=FALSE"
      - "MB_PLUGINS_DIR=/plugins"
    cpus: 1
    mem_limit: 1024mb
    networks: 
      - metanet1-clickhouse
    depends_on: 
      postgres-app-db:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # ETL Pipeline
  coal-mining-etl:
    build: etl/.
    container_name: coal-mining-etl
    hostname: coal-mining-etl
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=username
      - CLICKHOUSE_PASSWORD=password
      - CLICKHOUSE_DB=coal_mining
      - ETL_LOG_LEVEL=INFO
    networks:
      - metanet1-clickhouse
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./etl/logs:/app/logs
    cpus: 1
    mem_limit: 512m
    restart: unless-stopped

networks: 
  metanet1-clickhouse:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  clickhouse_data:
    driver: local
